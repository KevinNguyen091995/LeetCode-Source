package leetcode;

import java.util.Arrays;
import java.util.HashMap;

//Challenge is to stdout the index+1 that matches up to a numbered target in an array.
//FOUND at https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/submissions/

/*
 * Given a 1-indexed array of integers numbers that is already sorted in non-decreasing order, find two numbers such that they add up to a specific target number. 
 * Let these two numbers be numbers[index1] and numbers[index2] where 1 <= index1 < index2 <= numbers.length.
 *Return the indices of the two numbers, index1 and index2, added by one as an integer array [index1, index2] of length 2.
 *The tests are generated such that there is exactly one solution. You may not use the same element twice.
 *
 *Example 1:
 *Input: numbers = [2,7,11,15], target = 9
 *Output: [1,2]
 *Explanation: The sum of 2 and 7 is 9. Therefore, index1 = 1, index2 = 2. We return [1, 2].
 */

public class TwoSumsPointers {
	
	
	//Using Hashmap to solve this problem.
    public int[] twoSumMap(int[] numbers, int target) {
        HashMap<Integer, Integer> map = new HashMap<>();
        int[] newArr = new int[2];
        
        for(int i = 0; i < numbers.length; i++){
            if(map.containsKey(target-numbers[i])){
                return new int[]{map.get(target-numbers[i])+1, i+1};
            }
            map.put(numbers[i], i);
        }
    return null;
    }
    
    //Using 2 pointers to solve this problem
    public int[] twoSumPointers(int[] numbers, int target) {
        int start = 0;
        int end = numbers.length-1;
        
        while(start < end){
            int sum = numbers[start] + numbers[end];
            
            if(sum == target) return new int[] {start + 1, end + 1};
            else if(sum < target) start++;
            else end--;
        }
        return null;
    }
	
    public static void main(String[] args) {
    	TwoSumsPointers test = new TwoSumsPointers();
    	
    	System.out.println("Hashmap");
    	System.out.println(Arrays.toString(test.twoSumMap(new int[] {2,7,11,15}, 9)));
    	System.out.println(Arrays.toString(test.twoSumMap(new int[] {3,4,5,6,9,10}, 11)));
    	
    	System.out.println("\nTwo Pointers");
    	System.out.println(Arrays.toString(test.twoSumPointers(new int[] {2,7,11,15}, 9)));
    	System.out.println(Arrays.toString(test.twoSumPointers(new int[] {3,4,5,6,9,10}, 11)));
    }
	
}
